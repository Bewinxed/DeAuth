{"version":3,"sources":["../src/index.ts"],"sourcesContent":["const dev = false;\n\nexport interface User {\n\tid: string;\n\tusername?: string | null;\n\tavatar_url?: string | null;\n\tcreated_at: Date;\n\troles: string[];\n\tpermissions: string[];\n}\n\nexport interface Session {\n\tid: string;\n\tcreated_at: Date;\n\tactive_expires: bigint;\n\tidle_expires: bigint;\n\tauth_request_id: null | number;\n\tapplication_id: string;\n\tuser_id: string;\n\tprovider_account_id: string;\n\taccess_token: string;\n\trefresh_token: string;\n\taccess_token_expires_in: number;\n\timpersonating_user_id: null | string;\n}\n\nexport class DeAuth {\n\tprivate APP_ID: string;\n\tprivate REDIRECT_URI: string;\n\tprivate ACCESS_SECRET: string;\n\tprivate REFRESH_SECRET: string;\n\n\tconstructor(appId: string, redirectUri: string, accessSecret: string, refreshSecret: string) {\n\t\tthis.APP_ID = appId;\n\t\tthis.REDIRECT_URI = redirectUri;\n\t\tthis.ACCESS_SECRET = accessSecret;\n\t\tthis.REFRESH_SECRET = refreshSecret;\n\t}\n\n\tprivate async getOAuthURL(fetchInstance?: typeof fetch): Promise<string> {\n\t\tconst baseURL = dev\n\t\t\t? 'http://127.0.0.1:5173/api/login/url'\n\t\t\t: 'https://www.deauth.xyz/api/login/url';\n\t\tconst params = new URLSearchParams({\n\t\t\tapp_id: this.APP_ID,\n\t\t\tredirect_uri: this.REDIRECT_URI,\n\t\t\taccess_token: this.ACCESS_SECRET,\n\t\t\trefresh_token: this.REFRESH_SECRET,\n\t\t\tstate: crypto.getRandomValues(new Uint32Array(1))[0].toString()\n\t\t});\n\t\tconst redirect_uri = await (fetchInstance || fetch)(`${baseURL}?${params}`, {\n\t\t\t// cors headers\n\t\t\tmode: 'cors'\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn await res.text();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(res.status, res.statusText);\n\t\t\t\t\tthrow new Error('Error getting OAuth URL.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t\tconsole.debug(redirect_uri);\n\t\treturn redirect_uri;\n\t}\n\n\tpublic async redirectToOAuth({ fetchInstance }: { fetchInstance?: typeof fetch }): Promise<void> {\n\t\tif (window && typeof window !== 'undefined') {\n\t\t\twindow.location.href = await this.getOAuthURL(fetchInstance);\n\t\t} else {\n\t\t\tthrow new Error('Cannot redirect in a non-browser environment.');\n\t\t}\n\t}\n\n\tpublic async getSessionUser({\n\t\tsession_id,\n\t\taccess_token,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id: string;\n\t\taccess_token: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<User | null> {\n\t\tconst baseURL = dev\n\t\t\t? `http://127.0.0.1:5173/api/sessions/${session_id}/member`\n\t\t\t: `https://www.deauth.xyz/api/sessions/${session_id}/member`;\n\t\tconst params = new URLSearchParams();\n\t\tif (!(session_id)) {\n\t\t\tthrow new Error('No user ID or session ID provided.');\n\t\t}\n\t\tif (!access_token) {\n\t\t\tthrow new Error('No access token provided.');\n\t\t}\n\t\tparams.append('access_token', access_token);\n\t\treturn (fetchInstance || fetch)(`${baseURL}?${params}`, {\n\t\t\t// cors headers\n\t\t\tmode: 'cors'\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn (await res.json()) as User;\n\t\t\t\t} else if ([401, 403, 404].includes(res.status)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(res.status, res.statusText);\n\t\t\t\t\tthrow new Error('Error getting user.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\tprivate async getSession({\n\t\tsession_id,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id?: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<Session | null> {\n\t\tconst baseURL = dev\n\t\t\t? `http://127.0.0.1:5173/api/sessions/${session_id}`\n\t\t\t: `https://www.deauth.xyz/api/sessions/${session_id}`;\n\n\t\treturn (fetchInstance || fetch)(baseURL, {\n\t\t\t// cors headers\n\t\t\tmode: 'cors'\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn (await res.json()) as Session;\n\t\t\t\t} else if ([401, 403, 404].includes(res.status)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(res.status, res.statusText);\n\t\t\t\t\tthrow new Error('Error getting session.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\tprivate async exchangeProofForSession({\n\t\tsession_id,\n\t\tproof,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id?: string;\n\t\tproof?: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<Session | null> {\n\t\tconst baseURL = dev\n\t\t\t? 'http://127.0.0.1:5173/api/auth/session'\n\t\t\t: 'https://www.deauth.xyz/api/auth/session';\n\t\tif (!session_id && !proof) {\n\t\t\tthrow new Error('No session ID or proof provided.');\n\t\t}\n\t\tconst params = new URLSearchParams();\n\t\tif (session_id) {\n\t\t\tparams.append('session_id', session_id);\n\t\t}\n\t\tif (proof) {\n\t\t\tparams.append('proof', proof);\n\t\t}\n\t\treturn (fetchInstance || fetch)(`${baseURL}?${params}`, {\n\t\t\t// cors headers\n\t\t\tmode: 'cors'\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\tconst response = (await res.json()) as Session[];\n\t\t\t\t\tif (response.length === 0) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn response[0] as Session;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(res.status, res.statusText);\n\t\t\t\t\tthrow new Error('Error getting session.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\tprivate async refreshSession({\n\t\tsession_id,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<number | null> {\n\t\tconst baseURL = dev\n\t\t\t? `http://127.0.0.1/api/auth/session/${session_id}/refresh`\n\t\t\t: `https://www.deauth.xyz/api/auth/session/${session_id}/refresh`;\n\t\treturn (fetchInstance || fetch)(baseURL, {\n\t\t\t// cors headers\n\t\t\tmode: 'cors'\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn (await res.json()).access_token_expires_in as number;\n\t\t\t\t} else if ([401, 403, 404].includes(res.status)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(res.status, res.statusText);\n\t\t\t\t\tthrow new Error('Error refreshing session.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\tpublic async validateSession({\n\t\tsession_id,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<Session | null> {\n\t\tconst session = await this.getSession({\n\t\t\tsession_id\n\t\t});\n\t\tif (!session) {\n\t\t\treturn null;\n\t\t}\n\t\tlet active_period_expires_at = new Date(Number(session.active_expires));\n\t\tlet idle_period_expires_at = new Date(Number(session.idle_expires));\n\n\t\tif (Date.now() > idle_period_expires_at.getTime()) {\n\t\t\tconsole.error('Session expired.');\n\t\t\treturn null;\n\t\t}\n\n\t\tif (Date.now() > active_period_expires_at.getTime()) {\n\t\t\tawait this.refreshSession({\n\t\t\t\tfetchInstance,\n\t\t\t\tsession_id\n\t\t\t}).then((expires_in) => {\n\t\t\t\tif (!expires_in) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (expires_in) {\n\t\t\t\t\tactive_period_expires_at = new Date(Date.now() + 24 * 60 * 60 * 1000);\n\t\t\t\t\tidle_period_expires_at = new Date(Date.now() + 24 * 60 * 60 * 1000 * 7);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\t...session,\n\t\t\taccess_token_expires_in: active_period_expires_at.getTime()\n\t\t};\n\t}\n\n\tpublic async handleRedirect({\n\t\tsession_id,\n\t\tproof,\n\t\tfetchInstance\n\t}: {\n\t\tsession_id?: string;\n\t\tproof?: string;\n\t\tfetchInstance?: typeof fetch;\n\t}): Promise<Session | null> {\n\t\tif (!(session_id || proof)) {\n\t\t\tthrow new Error('No session ID found in the redirect URL.');\n\t\t}\n\n\t\treturn await this.exchangeProofForSession({\n\t\t\tsession_id,\n\t\t\tproof,\n\t\t\tfetchInstance\n\t\t})\n\t\t\t.then(async (session) => {\n\t\t\t\tif (!session) {\n\t\t\t\t\tthrow new Error('Session validation failed.');\n\t\t\t\t}\n\t\t\t\treturn session;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n}"],"mappings":"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","names":[]}